blueprint:
  name: Auto-lock door after duration (notify on success, open, or failure)
  description: >
    When the selected lock has been UNLOCKED for the chosen duration, lock it
    only if the contact sensor is CLOSED. Notify on successful lock, when
    locking is skipped because the door is open, or when the lock fails to
    confirm 'locked' within a timeout. Includes a customizable door name.
  domain: automation
  input:
    lock_entity:
      name: Door lock
      selector:
        entity:
          domain: lock
    contact_entity:
      name: Door contact sensor
      description: Usually 'off' = closed, 'on' = open.
      selector:
        entity:
          domain: binary_sensor
          device_class: door
    door_name:
      name: Door name (optional)
      description: If blank, the lock's friendly name will be used.
      default: ""
      selector:
        text:
    unlock_duration:
      name: Time unlocked before auto-lock
      default: 00:05:00
      selector:
        duration:
    confirm_timeout:
      name: Lock confirmation timeout
      description: How long to wait for the lock to report "locked" before considering it a failure.
      default: 00:00:20
      selector:
        duration:
    notify_service:
      name: Notify service (required)
      description: e.g. notify.mobile_app_fold_6
      selector:
        text:

    # Success (locked) notification
    notify_title_success:
      name: Success title
      default: "🔒 {{ (door_name or states[_lock].name) }} auto-locked"
      selector:
        text:
    notify_message_success:
      name: Success message
      default: "{{ (door_name or states[_lock].name) }} was left unlocked. Backup auto-lock engaged."
      selector:
        text:

    # Open (skipped) notification
    notify_title_open:
      name: Open/Skipped title
      default: "⚠️ Auto-lock failed: {{ (door_name or states[_lock].name) }} is open"
      selector:
        text:
    notify_message_open:
      name: Open/Skipped message
      default: "{{ (door_name or states[_lock].name) }} is open, cannot auto-lock."
      selector:
        text:

    # Failure to confirm locked (mechanical/jam/battery) notification
    notify_title_failed:
      name: Lock confirmation failed title
      default: "⚠️ Auto-lock failed: {{ (door_name or states[_lock].name) }}"
      selector:
        text:
    notify_message_failed:
      name: Lock confirmation failed message
      default: "Attempted to lock {{ (door_name or states[_lock].name) }}, but it never reported 'locked'. Check for jam/low battery."
      selector:
        text:

mode: restart

trigger:
  - platform: state
    entity_id: !input lock_entity
    to: "unlocked"
    for: !input unlock_duration

condition: []

action:
  # Make inputs available to templates safely (no !input inside {{ ... }})
  - variables:
      door_name: !input door_name
      _lock: !input lock_entity

  - choose:
      # ✅ Door is CLOSED -> try to lock it
      - conditions:
          - condition: state
            entity_id: !input contact_entity
            state: "off"    # 'off' = closed for most door contacts
        sequence:
          - service: lock.lock
            target:
              entity_id: !input lock_entity

          # Wait for the lock to actually report "locked"
          - wait_for_trigger:
              - platform: state
                entity_id: !input lock_entity
                to: "locked"
            timeout: !input confirm_timeout
            continue_on_timeout: true

          # Notify based on result:
          - choose:
              # Success path: lock confirmed
              - conditions:
                  - condition: template
                    value_template: "{{ wait.completed }}"
                sequence:
                  - service: !input notify_service
                    data:
                      title: !input notify_title_success
                      message: !input notify_message_success
            # Failure path: lock did not confirm
            default:
              - choose:
                  # Final check: lock eventually reported locked even though wait timed out
                  - conditions:
                      - condition: state
                        entity_id: !input lock_entity
                        state: "locked"
                    sequence:
                      - service: !input notify_service
                        data:
                          title: !input notify_title_success
                          message: !input notify_message_success
                # Still not locked -> report failure
                default:
                  - service: !input notify_service
                    data:
                      title: !input notify_title_failed
                      message: !input notify_message_failed

    # ❌ Door is OPEN -> notify (no lock attempt)
    default:
      - service: !input notify_service
        data:
          title: !input notify_title_open
          message: !input notify_message_open
