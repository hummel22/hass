# CreditWatch Home Assistant Webhook Automation
#
# Import this file into Home Assistant (Settings → Automations & Scenes → Import blueprint)
# to create an automation that listens for webhook calls from the CreditWatch backend.
# Set the ``Webhook ID`` blueprint input to the identifier configured in the backend.
# Provide the notify services in the blueprint inputs. Configure the CreditWatch backend
# with a ``default_target`` slug (``default`` is used when no slug is provided) and optional
# overrides that map to the entries you configure below.
blueprint:
  name: CreditWatch notification webhook
  description: Handle CreditWatch reminder notifications via a webhook
  domain: automation
  source_url: https://example.com/creditwatch/home-assistant-webhook
  input:
    webhook_id:
      name: Webhook ID
      description: Unique identifier configured in the CreditWatch backend.
      selector:
        text:
      default: creditwatch
    notify_services:
      name: Default notify services
      description: |
        YAML list of Home Assistant notify services that should receive notifications when
        no target override is provided by the backend.
      selector:
        object:
      default:
        - notify.mobile_app_example_device
    target_overrides:
      name: Target overrides
      description: |
        (Optional) YAML mapping of target slugs to lists of notify services. Use this when
        the backend is configured with additional target slugs and you want each slug to
        deliver to a different set of notify services.
      selector:
        object:
      default: {}

trigger:
  - platform: webhook
    allowed_methods:
      - POST
    local_only: false
    webhook_id: !input webhook_id

variables:
  payload: "{{ trigger.json | default({}) }}"
  target_slug: "{{ payload.target | default('default') }}"
  default_notify_services: !input notify_services
  target_overrides: !input target_overrides
  notify_services: >-
    {% set overrides = target_overrides if target_overrides is mapping else {} %}
    {% set services = overrides.get(target_slug, default_notify_services) %}
    {% if services in (none, '') %}
      {% set services = default_notify_services %}
    {% endif %}
    {% if services is string %}
      {{ [services] }}
    {% elif services is mapping %}
      {{ services.values() | list }}
    {% else %}
      {{ services | list }}
    {% endif %}

condition: []

action:
  - repeat:
      for_each: "{{ notify_services }}"
      sequence:
        - service: "{{ repeat.item }}"
          data:
            title: "{{ payload.title | default('CreditWatch notification') }}"
            message: "{{ payload.message | default('') }}"
            data: "{{ payload.data | default({}) }}"

mode: single
